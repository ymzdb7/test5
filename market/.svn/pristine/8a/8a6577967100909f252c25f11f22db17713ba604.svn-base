package com.winhands.modules.market.controller;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.winhands.common.annotation.SysLog;
import com.winhands.common.utils.PageUtils;
import com.winhands.common.utils.Query;
import com.winhands.common.utils.R;
import com.winhands.modules.market.entity.OrderEntity;
import com.winhands.modules.market.service.OrderService;
import com.winhands.modules.sys.controller.AbstractController;

/**
 * 订单管理
 * 
 */
@RestController
@RequestMapping("/market/order")
public class OrderController extends AbstractController {
	@Autowired
	private OrderService orderService;
	
	/**
	 * 所有订单列表
	 */
	@ResponseBody
	@RequestMapping("/list")
	/*@RequiresPermissions("market:goods:list")*/
	public R list(@RequestParam Map<String, Object> params){
		//查询列表数据
		/*if(null==getUser().getAddress()||getUser().getAddress().equals("")) {
		}else {
			params.put("address", getUser().getAddress());
		}*/
			String orderTime=(String) params.get("orderTime");
		if(orderTime==null) {
			SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
			Date date=new Date();
			String time1=sdf.format(date);
			params.put("orderTime", time1);
		}else {
			
			params.put("orderTime", orderTime);
		}
		Query query = new Query(params);
		List<OrderEntity> goodsList = orderService.queryList(query);
		int total = orderService.queryTotal(query);
		
		PageUtils pageUtil = new PageUtils(goodsList, total, query.getLimit(), query.getPage());
		
		return R.ok().put("page", pageUtil);
	}
	
	
	
	
	/**
	 * 删除订单
	 */
	@SysLog("删除商品")
	@RequestMapping("/delete")
	public R delete(@RequestBody Long[] ids){
		orderService.deleteBatch(ids);
		
		return R.ok();
	}
	
	

}